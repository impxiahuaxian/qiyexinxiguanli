<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.shuangyulin.mapper.MissionMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加任务记录 -->
	<insert id="addMission" parameterType="mission">
		insert into t_mission(missionName,missionPeople) values 
		(#{missionName},#{missionPeople})
	</insert>

	<!-- 按照查询条件分页查询任务记录 -->
	<select id="queryMission" resultMap="missionMap" >
		select * from t_mission ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="missionMap" type="mission">
        <id property="missionName" column="missionName" />
    </resultMap>

    <!-- 按照查询条件查询所有任务录 -->
	<select id="queryMissionList" resultMap="missionMap" >
		select t_mission.* from t_mission ${where}
	</select>

    <!-- 按照查询条件的任务记录数 -->
	<select id="queryMissionCount" resultType="int">
		select count(*) from t_mission ${where}
	</select>

	<!-- 根据主键查询某个任务记录 -->
	<select id="getMission" parameterType="string" resultMap="missionMap">
		select * from t_mission where t_mission.missionName = #{missionName}
	</select>

	<!-- 更新部门记录 -->
	<update id="updateMission" parameterType="mission">
		update t_mission set missionPeople=#{missionPeople} where missionName = #{missionName}
	</update>

	<!-- 删除部门记录 -->
	<delete id="deleteMission" parameterType="string">
		delete from t_mission where missionName=#{missionName}
	</delete>

</mapper>
